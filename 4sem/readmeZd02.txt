    «адание 02
    ==========
    
  –еализовать оконное Windows-приложение тестировани€ сортировок.
    –ассмотреть представление множества в 2-х вариантах:
      а) как массив вида int[];
      b) как ArrayList.
    ¬ каждом приложении реализуетс€ сортировка QuickSort (быстра€ сортировка),
    а дл€ случа€ b) ещЄ и сортировка-метод из класса ArrayList.
    ¬ добавлении к этим сортировкам должна быть реализована одна из следующих 
    сортировок:
      1) SelectSort - сортировка выбором;                 ................
      2) InsertSort - сортировка вставками;               ................
      3) ShellSort -  сортировка Ўелла;                   ................
      4) HeapSort -   пирамидальна€ сортировка;           ................
      5) RadixSort (m=2,  k=32) - поразр€дна€ сортировка; ................
      6) RadixSort (m=16, k=8)  - поразр€дна€ сортировка; ................
      7) RadixSort (m=256,k=4)  - поразр€дна€ сортировка; ................
      
    —м. материал в "јлгоритмы сортировки.mht".
      
    ƒл€ определении времени сортировки все используют
      из System.Diagnostics 
            Stopwatch swatch=new Stopwatch();
            swatch.Start();
              <код, врем€ которого измер€етс€ > 
            swatch.Stop();  
            string t=swatch.Elapsed.ToString();
      Ќе забывайте при повторном измерении времени использовать swatch.Reset().
            
    ƒл€ выбора сортируемых двоичных файлов использовать стандартный диалог
      выбора файлов!
    ѕредусмотреть возможность сохранени€ нагл€дного результата сравнений сортировок,
    с одновременной выдачей информации об использованном процессоре, используемой ќ—,
    объеме физической оперативной пам€ти (см.Envir_of_PC в этой папке).
    ƒизайн и интерфейс приложени€ разрабатываете по своему вкусу, желательно
      максимально пон€тно и нагл€дно.
      