Задание 03 (домашнее, к 24.02.2012)
   ===================================

      Написать программу перевода арифметического скобочного выражения в обратную
   польскую запись, используя стековый алгоритм перевода (использовать созданный
   вами модуль ucst_nn (см. задание Zd01)), модуль usstr_kv.pp (или свой аналогичный
   модуль) и следующие спецификации синтаксиса входного выражения:
       - в записи выражения в качестве операндов операций используются только
           однобуквенные идентификаторы из малых латинских букв;
       - используемые операции: '+','-','*','/' с соответствующим приоритетом
           выполнения;
       - в записи выражения отсутствуют пробелы, а круглые скобки используются
           в обычном смысле.
   Например, следующее выражение является допустимым:
        t-(p+y/(s-g*k+w)*(u-h))/d
   Для этого выражения результатом работы программы должна быть строка:
        tpysgk*-w+/uh-*+d/-
   Программа должна проверять синтаксическую правильность введенной с клавиатуры
   строки с исходным выражением и, в случае обнаружения ошибки в записи, должна
   выдавать в удобном виде информацию о типе и месте ошибки в записи исходного
   арифметического выражения.

     Описание стекового алгоритма преобразования арифметического скобочного
     выражения в выражение в обратной польской записи:
        1. Пусть   function prior(c:char):byte  -функция, возвращающая 
           приоритет операции с, а именно:
               - если с='(' -возвращается 1;
               - если с='+' или c='-' -возвращается 2;
               - если с='*' или c='/' -возвращается 3;
               - если с=любой другой литере, то возвращается 0.
        2. Пусть str_in -входная строка с исходным арифметическим выражением;
              str_out -выходная строка с выражением в обратной польской записи;
              nxtc -функция, выдающая очередную литеру из входной строки, по-
                       мещающая также эту литеру в переменную curc;
              mov2strout(c:char) -процедура, помещающая литеру с в очередную
                                     позицию выходной строки str_out.
        3. Пусть также op_stack -стек операций и для него реализованы операции:
              procedure push(c:char) помещает в стек op_stack литеру с;
              function pop -изымает из стека литеру с вершины этого стека,
                            возвращая ее, как результат выполнения функции;
              function top -возвращает в качестве результата выполнения функции
                            литеру на вершине стека op_stack, не изымая ее 
                            из стека.
        4. Тогда алгоритм получения обратной польской записи может быть описан
           следующим образом:
             пусть исходная строка последовательно сканируется вызовом 
             функции nxtc, при этом:
               1) если curc=операнд, то mov2strout(curc);
               2) если curc='(', то push(curc);
               3) если curc=операция, то
               4)   если prior(curc)>prior(top), то push(curc)
                    иначе mov2strout(pop); перейти на шаг 4)
               5) если curc=')', то пока (c:=pop)<>'(' mov2strout(c);
               6) если обработаны все литеры входной строки, то,
                  пока стек не пуст, выполнять mov2strout(pop);

         5. При реализации описанного алгоритма не забывать о необходимости
               контроля синтаксической правильности введенной строки с выдачей
               информации о характере и месте ошибки!!!